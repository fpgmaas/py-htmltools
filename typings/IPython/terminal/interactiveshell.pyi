"""
This type stub file was generated by pyright.
"""

from IPython.core.interactiveshell import InteractiveShell
from traitlets import observe
from pygments.style import Style

"""IPython terminal interface using prompt_toolkit"""
DISPLAY_BANNER_DEPRECATED = ...
PTK3 = ...
class _NoStyle(Style):
    ...


_style_overrides_light_bg = ...
_style_overrides_linux = ...
def get_default_editor(): # -> str:
    ...

_use_simple_prompt = ...
def black_reformat_handler(text_before_cursor): # -> str:
    ...

class TerminalInteractiveShell(InteractiveShell):
    mime_renderers = ...
    space_for_menu = ...
    pt_app = ...
    debugger_history = ...
    simple_prompt = ...
    @property
    def debugger_cls(self): # -> Type[Pdb] | Type[TerminalPdb]:
        ...
    
    confirm_exit = ...
    editing_mode = ...
    autoformatter = ...
    mouse_support = ...
    highlighting_style = ...
    def refresh_style(self): # -> None:
        ...
    
    highlighting_style_overrides = ...
    true_color = ...
    editor = ...
    prompts_class = ...
    prompts = ...
    term_title = ...
    term_title_format = ...
    display_completions = ...
    highlight_matching_brackets = ...
    extra_open_editor_shortcuts = ...
    handle_return = ...
    enable_history_search = ...
    prompt_includes_vi_mode = ...
    @observe('term_title')
    def init_term_title(self, change=...): # -> None:
        ...
    
    def restore_term_title(self): # -> None:
        ...
    
    def init_display_formatter(self): # -> None:
        ...
    
    def init_prompt_toolkit_cli(self): # -> None:
        ...
    
    @property
    def pt_complete_style(self): # -> CompleteStyle:
        ...
    
    @property
    def color_depth(self): # -> Literal[ColorDepth.TRUE_COLOR] | None:
        ...
    
    def prompt_for_code(self):
        ...
    
    def enable_win_unicode_console(self): # -> None:
        ...
    
    def init_io(self): # -> None:
        ...
    
    def init_magics(self): # -> None:
        ...
    
    def init_alias(self): # -> None:
        ...
    
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def ask_exit(self): # -> None:
        ...
    
    rl_next_input = ...
    def interact(self, display_banner=...): # -> None:
        ...
    
    def mainloop(self, display_banner=...): # -> None:
        ...
    
    _inputhook = ...
    def inputhook(self, context): # -> None:
        ...
    
    active_eventloop = ...
    def enable_gui(self, gui=...): # -> None:
        ...
    
    system = ...
    def auto_rewrite_input(self, cmd): # -> None:
        """Overridden from the parent class to use fancy rewriting prompt"""
        ...
    
    _prompts_before = ...
    def switch_doctest_mode(self, mode): # -> None:
        """Switch prompts to classic for %doctest_mode"""
        ...
    


if __name__ == '__main__':
    ...
