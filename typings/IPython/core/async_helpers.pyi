"""
This type stub file was generated by pyright.
"""

import ast

"""
Async helper function that are invalid syntax on Python 3.5 and below.

This code is best effort, and may have edge cases not behaving as expected. In
particular it contain a number of heuristics to detect whether code is
effectively async and need to run in an event loop or not.

Some constructs (like top-level `return`, or `yield`) are taken care of
explicitly to actually raise a SyntaxError and stay as close as possible to
Python semantics.
"""
class _AsyncIORunner:
    def __call__(self, coro):
        """
        Handler for asyncio autoawait
        """
        ...
    
    def __str__(self) -> str:
        ...
    


_asyncio_runner = ...
class _AsyncSyntaxErrorVisitor(ast.NodeVisitor):
    """
    Find syntax errors that would be an error in an async repl, but because
    the implementation involves wrapping the repl in an async function, it
    is erroneously allowed (e.g. yield or return at the top level)
    """
    def __init__(self) -> None:
        ...
    
    def generic_visit(self, node): # -> None:
        ...
    


